class Solution {
public:
    bool isAnagram(string s, string t) {
        if(s.length() != t.length()){
            return false;
        }
        vector<int> table(26,0);
        for (auto& ch:s){
            table[ch - 'a']++;
        }
        for (auto& ch:t){
            table[ch-'a']--;
            if (table[ch - 'a']<0){
                return false;
            }
        }
        returnã€€true;

    }
};

class Solution:
    def isAnagram(self, s: str, t: str) -> bool:
        if len(s) != len(t):
            return False
        chalist = [0]*26
        for i in range(len(s)):
            chalist[ord(s[i]) - 97] +=1
            chalist[ord(t[i]) - 97] -=1
        for j in range(26):
            if chalist[j] != 0:
                return False
        return True
